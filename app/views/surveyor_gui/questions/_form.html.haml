= render "surveyor_gui/partials/url_helpers"
= simple_form_for [surveyor_gui, question] do |f|
  .questions
    = error_messages_for(question)
    = f.hidden_field :id
    = f.hidden_field :display_type
    = hidden_field_tag :prev_question_id, params[:prev_question_id] if params[:prev_question_id].present?

    - if question.is_a? Question
      = f.hidden_field :display_order, class: "question-display-order"
      = f.hidden_field :survey_section_id
      = f.hidden_field :pick
      = f.hidden_field :modifiable
      = f.hidden_field :question_group_id

    - if question.is_a? QuestionGroup

      = hidden_field_tag "converted_question_id", params[:question_id]

      = f.input :survey_section_id, as: :hidden, input_html: { value: @survey_section_id }

      - if question.question_type_id.to_sym == :group_default
        = f.hidden_field :question_id


    = f.input :text , :label => "Question", :input_html=>{:size=>'55', value: adjusted_text(question), class: "tinymce"}

    %span.fl
      %strong Mandatory?
    = f.input :is_mandatory, :label => false, :as=>:boolean, :wrapper_html=>{:class=>'fl notfirst'}

    -# TODO May want to make this an edit in place so can easily assign to nested/child questions...right now can only assign to question group or a standalone question.  This is to support the data visualizations in WSM.
    - if params[:action] == "edit"
      %br/
      - if !question.is_a?(QuestionGroup) && question.part_of_group?
        %label Data Export Identifier
        %br/
        = text_field_tag "question[question_group_attributes][data_export_identifier]", question.question_group.data_export_identifier
      - else
        = f.input :data_export_identifier

    %br/
    %br/
    %strong Question Type
    %br/
    .question_type.row
      .col-md-3
        = f.input :question_type_id,
          collection: question_type_subset([:pick_one]) ,
          :as => :radio_buttons , :wrapper_html=>{:size=>'60'}, :label => false, include_hidden: false

        = f.input :question_type_id,
          collection: question_type_subset([:pick_any]) ,
          :as => :radio_buttons , :wrapper_html=>{:size=>'60'}, :label => false, include_hidden: false

      .col-md-3
        = f.input :question_type_id,
          collection: question_type_subset([:dropdown, :string, :number, :stars, :label, :box]) ,
          :as => :radio_buttons , :wrapper_html=>{:size=>'60'}, :label => false, include_hidden: false
      .col-md-3
        = f.input :question_type_id,
          collection: question_type_subset([:date, :datetime, :time, :slider, :group_default ]) ,
          :as => :radio_buttons , :wrapper_html=>{:size=>'60'}, :label => false, include_hidden: false
      .col-md-3
        = f.input :question_type_id,
          collection: question_type_subset([:file, :grid_one, :grid_any, :grid_dropdown, :group_inline, :repeater]) ,
          :as => :radio_buttons , :wrapper_html=>{:size=>'60'}, :label => false, include_hidden: false
    %br/
    #answer_choice
      - if @question.is_a? Question
        = render 'picks', :f => f
      - else
        = render "surveyor_gui/question_groups/group_inline_fields", f: f

    - if @question.is_a? Question
      #number_questions
      #report_code{:style => "display:none"}
        %br/
        = f.input :report_code, :label=>'Report Code', :label_html=>{:style=>'width:10em;'},:hint=>'Use this code to uniquely identify application data driven questions for reporting.'
        %br/
    %br/
  .buttons
    = f.button :submit, 'Save Changes', data: { disable_with: "Please wait..." }, class: "btn btn-primary"
    = link_to "Cancel", surveyor_gui.edit_surveyform_url(@survey)
